version: '3.7'
services:
  db:
    image: postgres:16.2
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    ports:
      - "127.0.0.1:15432:5432"
    hostname: ${POSTGRES_HOST}

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - BOT_DEFAULT_LOCALE=en
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - APP_LOGGING_LEVEL=${APP_LOGGING_LEVEL}
      - BOT_TOKEN=${BOT_TOKEN}
      - EMAIL_FERNET_KEY=${EMAIL_FERNET_KEY}
      - TOPIC_FERNET_KEY=${TOPIC_FERNET_KEY}
    restart: always
    depends_on:
      - db

volumes:
  pgdata: